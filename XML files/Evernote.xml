<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<application>
    <packageName>com.evernote</packageName>
    <components>
        <Component>
            <type>activity</type>
            <name>ui.HomeActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.MAIN</actions>
                    <categories>android.intent.category.LAUNCHER</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.PhoneMainActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabletFragmentActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.EvernoteMapActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.SnippetActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.MapActivityGroup</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.maps.PinDropActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.PinLockActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SecurityPreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SECURITY_PREFERENCES</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TabManager</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.OfflineNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LinkedNotebookSettings</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.InformationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.SEARCH_NOTES</actions>
                    <actions>android.intent.action.SEARCH</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteListAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.intent.action.VIEW</actions>
                    <actions>com.evernote.action.VIEW_NOTELIST_TABLET</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteViewAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.VIEW_NOTE_TABLET</actions>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>evernote</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EvernotePreferenceActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.action.NEW_SKITCH_NOTE</actions>
                    <actions>android.intent.action.SEND</actions>
                    <actions>android.intent.action.SEND_MULTIPLE</actions>
                    <data>
                        <scheme></scheme>
                        <mimeType>*/*</mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NewNoteAloneActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetNewNoteActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.widget.action.CREATE_NEW_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SNAPSHOT</actions>
                    <actions>com.evernote.widget.action.NEW_VOICE_NOTE</actions>
                    <actions>com.evernote.widget.action.NEW_SKITCH_NOTE</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LearnMoreActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.EmailActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TagEditActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NoteInfoActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.FilePickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AuthenticationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WebActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.TrunkActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.WidgetSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SEARCH</actions>
                    <categories>android.intent.category.DEFAULT</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.AdvanceSearchSelector</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.LoginActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RegistrationActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.CaptchaActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ResetPasswordActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.RateAppActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.DYNDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.StandardDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareWithFacebook</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.ShareDialogActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.SDCardChangedActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.helper.URIBrokerActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/shard/s.*/share/.*</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.BillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.billing.LaunchBillingActivity</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.VIEW</actions>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <data>
                        <scheme>https</scheme>
                        <mimeType></mimeType>
                        <host>www.stage.evernote.com</host>
                        <pathPattern>/Checkout.action</pathPattern>
                    </data>
                    <categories>android.intent.category.DEFAULT</categories>
                    <categories>android.intent.category.BROWSABLE</categories>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>com.evernote.ui.NotebookShareSettingsActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>activity</type>
            <name>ui.EmailPickerActivity</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.EvernoteService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.ui.helper.WidgetProviderService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.client.SyncService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>service</type>
            <name>com.evernote.billing.BillingService</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
            <sensitiveFlows>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.util.HashMap: java.lang.Object get(java.lang.Object)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Class: java.lang.String getSimpleName()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(long,com.evernote.billing.x)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getAction()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String[] getStringArrayExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: java.lang.String getStringExtra(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: long getLongExtra(java.lang.String,long)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: int getIntExtra(java.lang.String,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void a(android.content.Intent,int)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.Intent: void &lt;init&gt;(java.lang.String)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>IPC</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: boolean bindService(android.content.Intent,android.content.ServiceConnection,int)&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean k()&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;android.content.ContextWrapper: android.content.Context getBaseContext()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: boolean a(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
                <Flow>
                    <sink>Parameter</sink>
                    <sinkCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sinkCalledAt>
                    <source>&lt;java.lang.Throwable: java.lang.Throwable getCause()&gt;</source>
                    <sourceCalledAt>&lt;com.evernote.billing.BillingService: void b(java.lang.String,java.lang.String)&gt;</sourceCalledAt>
                    <sinkDomain>NO_CATEGORY</sinkDomain>
                    <sourceDomain>IPC</sourceDomain>
                </Flow>
            </sensitiveFlows>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.EvernoteWidgetWSnippetProvider</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.appwidget.action.APPWIDGET_UPDATE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.WidgetUpdateReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
                <filter>
                    <actions>com.evernote.action.ACTION_RECENT_NOTES_CHANGED</actions>
                    <actions>com.evernote.action.LOGOUT_DONE</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.CHUNK_DONE</actions>
                    <actions>com.evernote.action.NOTE_UPLOADED</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.CONTENT_DONE</actions>
                    <actions>com.evernote.action.THUMBNAIL_DONE</actions>
                    <actions>com.evernote.action.ACTION_PINLOCK_STATE_CHANGE</actions>
                    <actions>com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.BootReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>android.intent.action.BOOT_COMPLETED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.SyncNotification</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.SYNC_STARTED</actions>
                    <actions>com.evernote.action.SYNC_ERROR</actions>
                    <actions>com.evernote.action.SYNC_DONE</actions>
                    <actions>com.evernote.action.SAVE_NOTE_DONE</actions>
                    <actions>com.evernote.action.SDCARD_CHANGED</actions>
                    <actions>com.evernote.action.DB_READ_ONLY</actions>
                    <actions>com.evernote.action.DB_OPEN_CREATION_FAILED</actions>
                    <actions>com.evernote.action.DB_CORRUPTED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.sonyericsson.extras.livekey</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.ui.helper.StopAudioNoteReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.ACTION_STOP_AUDIO_NOTE</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.billing.BillingReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.android.vending.billing.IN_APP_NOTIFY</actions>
                    <actions>com.android.vending.billing.RESPONSE_CODE</actions>
                    <actions>com.android.vending.billing.PURCHASE_STATE_CHANGED</actions>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>receiver</type>
            <name>com.evernote.util.MultiUseReceiver</name>
            <RequiredPermissions/>
            <IntentFilter>
                <filter>
                    <actions>com.evernote.action.ACTION_DELAYED_NOTIFICATION</actions>
                    <data>
                        <scheme>notificationId</scheme>
                        <mimeType></mimeType>
                        <host></host>
                        <pathPattern></pathPattern>
                    </data>
                    <pathData></pathData>
                </filter>
            </IntentFilter>
            <PropagatedPermissions/>
        </Component>
        <Component>
            <type>provider</type>
            <name>com.evernote.provider.EvernoteProvider</name>
            <RequiredPermissions/>
            <IntentFilter/>
            <PropagatedPermissions/>
        </Component>
    </components>
    <newIntents>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3qbss268a03aal9695unlv4eom</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c3kjq2mr053h3p0f5lg97bsopg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pjuqrfaavtkigfv2hvp493qo8v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>76vce91m0rbigvr4bb4898lfju</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2ai1fl02qjn7a005k3rbdbe20</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>585tms1que8oufsi6c7dv46qs0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cgque7ori48e6gmg5mpk9r8ic0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>se1b1fn6gj387l59uad7eg2e1h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i4nd5sv904fa3hgmtilpn8qhmq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4r64qfpuqk8kbn83q997ovb7re</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dcepgmrfmqfodtgodn7hgbmbgp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i51h4327qhu5e5ei2a6slgc52j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i7trknpse3j9cunmnpo2ksm93o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3acj27ttack37jv69c5vcgrob9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d0fjumub5lv71omr4tusj2apdh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9blk4s2k3072hrhg6m9pbt0ogb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9pl01v71et5eeofn82kbf8kjlk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>aj9gjqeuv45mjo99n3pba13tli</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ggpqh89sa219hb8riqvm5im4k8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7qmge57saacnc33b3sjuq3m5t2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c93a31s90pkh32no996qre7ucq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bmh6lu8f1un5vhll1l01pr01b2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dtepvgbc6rr46g2pf9fdjmlec5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fq9f731rosv8efrf44ldhfjd28</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gv9u9n9karsa9cerfq9meejf40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qqbk34i7bkj2niugefgevitp1d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7bh121sdf9uembq43gf0snfoho</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sv9lfq8lo4p92rvsgbkk4ibrev</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8k6bc9e10pl5njungnc689p3io</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>chvedsoaf39jaesdlikbmqf23v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ke2emk65v8en45s3f28nqn5236</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a9fro0rtgcrg2lmhebo7ia13ih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qhucgg1anptaet4v9oii3qp8hr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2grkomocjfl8oi26mvsajirkig</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sbn17vbifrfkk23j24njn4as94</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>k8emsak42cq12urju0pa948lfn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>73mdp29a88uc3aur07qe3dbl9e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>iqvf321ib3g5vcnrn6iu5vvej6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>4ltjkc0r8fhp24o31b387cos5d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>21dsl5b4kjj91ec1qsp6o0ii2f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lch7lnrn9fj5rkppelltsnune2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hold4f17ro4ldqh3cn65b2028m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5di3griqbihp23qacsdpvpop3k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1pmp4j45si3cjebcd4h0ga2lj2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p73u2is3ua2q7g8j7g0ji1qke8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fa0jmqcs0ilu0k7k4iancgphlf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b8g9ocdgk2kt0ovmee78nbmv75</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4fmcs9d1014dsfi76rchnvfpmn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>em07lblvkalri3kgevllv8lnop</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k8tesh4kmckacs7pp836q8dqqo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>qej950b32mfhkdlnldeknah19</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>561c45ehu0bicnlv1amiihch91</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bduem0jobh04m1tq79o5k5093c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ti2115dsgffnj6pnmndavdho4o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>57qh46qqvsid91f70943av2o3g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>oa2tknk9hqi7om63l4p95i8bmp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>odgerlbn7i6o70t7ljjj86a10q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6omp5s0bei6aabn2fl84kq2m6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>afu5ucn6pos5mpjbmvlq6m1sp0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tt8ghrb78bb3dr1v1oi0f2g6mk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g1rlr2vkcndnoboclgsb9gsjr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3r5pr48leuo76hpgc61kqrpmpi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vaku20mpvd557vd2uueojtjmga</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>abc215d4n9ls2vbmq0kdhc78qa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>eq4c4nfuami6aus5k2ugh9vd2a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rinq8tg0k6oabn16bo6hbms3qd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3a1mlq8hidnqvqubrhbnsqjdh2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ffj8lqdvfrjht0g4gortf519hn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>amvgcrm210iq5fmml4oliqd93r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>okfn5pm14jv1m980h2effdu11b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>82nbfqu1nnsra7f4fvtpr6kgjs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>451rkp9kvh6iaedfalhvlcamv4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>88p7cgmv0v1pmn05frrcb92an5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>vrfdrc5ufchfigbnrl36u17dpv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>r4il23jfv2dbjcqpv9b83ernnp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kagdj8ubvp8qmuommfj53ah7h8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h1i2omrh15arq6j8aqp43c6imn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hgd0fj2fkg8h2hrvp9phm815s4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>rfa09farjj23r5g4su3p2no9t5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j3md4ufg9t7m09rv2jbkreenp7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6i90ii8sjjit49sm29o1r24pkn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>a6h7otd63bqtpq30nhbatmiah2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pul5nblfctf9ug36ba7ujlse01</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j4s4o094ekcdv2v2e5fpbcf7c9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>rk8ae7q7sqpuc3r7iqu3sq2i80</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9qtjhb83ns0be9i5bsqugh8ak4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h8u5mftbsp5f5csjpvodnvth7m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>7bk6eo0jc1jvmhongn7rsa48nh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>t44dssv25ct3qepos5h9noe08</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>f32lhaijpmj1290us9214j2tie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vvhfpb8p2bdjdp58dd5ppqgc9e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>25oof71dsvhejnemjl6ld8puhm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ef0s7b359gee6ftbq32dqsenti</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>7ros5q4otofah0hb69aqkhs32v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7coj34h05lc829k8rifiv9j565</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>90018bd5vue43c5rk3vb58449v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>psnmoq8qupho2c6ijs2ja08dd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6i2ij06arvt6u7531vc9m1mugr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nal61bjskv92mjcea7p1tm9is9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>96u3lsoc416u5r423lhdct9lu6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u25hla2328bd2ggodd29ppus82</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cs89lbkmsl7soc3h0s7h5rtrl9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>99p7g1j54l9kph4qnbuhgo10vn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>snkq01hja3al6ie7ncgpob2gqm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>e45clgg3fuilbv7pcj8dadkqoq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n664ttp0nje6n60l73akm7bm5j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ntmlrcu6dr4mioc8e1lbnaqo3e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bd29hrkl7e6c5gk0d1g88om36d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dbn0gc6cuv9pudtnkshj257pj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l7oh99a56j5dgnf8rcrrjbp28d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>hmp40c2rpcdjev7vbtif0ide19</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kicomnpj3btdr2cvrdehh60vpb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>au9kmsotctdn337oe4ttult77l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>lmv8og40d7hngaj07df4euhocv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lv5j4vpn3ak1m0abjtnevl53k9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tm2d2sbj06a2jgji10r9pt16f8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pdid0t0ridv5iosa305h12pmjq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mnc9ki3r2to8voiu06776q1j8h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ut7cupfdcfamjlcc5eont9r3b7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>dbhuhl8fglvm877l66f8t7rpt2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>blrb5gura7fhogt4jkr2cl51rb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vc1ubrv5dpoocmdlsdd5uqaigu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sv70nfed5slk4kqlr70ni0fjh8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vds6t76p1anc9oc3sjjfaajiuc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hvc9rn6mppbtijethni9c1qh1g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7nod1nrpmeu403l7u9btuunaie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aeuhafor96jclld3af431642cf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7k1ps56gtbvp94mvoj2k5jk4dv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>40gjsaaeddsahe5auf2i97cd7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mecvp8n1bf2hrjbcrtc4sk1bis</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>kr0psrclf06d6m4j88jbl3qiob</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ihinu9cqre4tpgbjjbo6t026u6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pa7qi4kub3g5r4bs6baeavovvk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>eg6u4r8il9ln3pn6of4fl9pfvi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ra95ovq9vh1v4c57bmkb4gsvt5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ra53pqc2e9nlss21et1jh1icdp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bjnuuf0ehj0s8t5nfca2bqjeg5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1d7n5b1bt21cso5n8c9m681stv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mi0vdmfkitcc440e6354jn4efa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>39scfbhpkgfc6bbfqoa41kboc8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>er0ejjd2mc9edqmfn9lgajlq9n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2gqg097kgopq0nthq3vkcsl3o8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>atg4t982d0jh6gacuhbkj8boc2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dvhnfv1l7mu6cl6fhd152am80c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kaachdo3br13jqphu5ok79cc0k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>r5b10vlvfh68cobr428ekjlnnc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qkaeddifqv86hlrfajllosvg4n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>spdtq6vlto21enaqmhj0ogcnj3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>eendl9qnncsl9dn1bvm50d1821</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>rs0rqo241cthja0h2cdm8nn46t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>443fo4vsu64m6f3omaol1u1skd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>qn7cdpfa84gluii3fsbteq7a7a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aoivphqnu8pbvdfe8j8oin3i4c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rm8c52a4e5iobsecr08mblra04</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bdgilu4lrhgj52hg8kjkiviffo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hrom8okpbs4qknk2kk934mh687</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7ua61aqduf5vu7tsserabe7l11</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>88dt48gnbdp2hjd7rfueqeeifk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tvu9ahr95pn0i17aaa95n7frso</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mnagkifi2cq8jl6ssi8ntjtbmm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p45cvfff893ae2qv97vhlloek2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>c87f7c0uifbt6os7v8j2rikjhr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>r0sb8nddirjtptj6cmr70e9all</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>frsommtimq9l8r0lbbk0su17b9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3d70b9qrjpmrv1eklsoncjv243</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6get2hjj2g47fu1r1qhjo6fma7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e1cpkojdqv7j2hp6k0rqp7l9k3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ge2se7o7uh5r7l51qodolhioo5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mqsd972u0eac6r9usuuq0bu7kg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7vkah7gjpgieq3isuhm1i1prnj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>j0jvjvvcrch2r08i2abcfo45c5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ok41kbuaknevb8ffk181fhbvmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>g5f0r4mge7sf3e3a822qlfu0ub</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>egan450le7sniokdfkm77da3at</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aolrg67q09e3rg48rr3qm42n7c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ueocve7k26pt55s0kui2lp541q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hqo0q8jb7hrfgv0f5o41f5tfpv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tb1jmkpc378i5jbjdafsvlpr0l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hjr7g8hfa5np6pvuhchd7c7fqv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m3cinfml409bp5lrstihdg1qb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>odsb53p59rtu7rb2r0c65if39s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lgl026d9veup0aib7r263g259m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pdmhlo3h0ep2uk8cljpocm3bov</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bgv44jpqikesugdevfrenb3jne</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>sk6ahn8tleb2c5kkc58tthrtl4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3rjh68ldhpctqjofmj592dlbnh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>37o8on74148cs9121ds3rjctok</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k2o2i8663a5ob9qnc3c2bgohfu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jmj8avs7qi1gc8ckvuvbsor31f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l70h5vmo8noiu9cp31a03f09gg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>n6d0i6vh72sp57kudpa9bvvb83</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>v3mujsseif9rn7l8q61vjmjj3j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b7npucusva94guc24vb6708bs1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>92cf4c7a2fvdrb84nuilcvkehp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7bltljjml98k9vrksr0i08q3p4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tr71mnhcul3qi67mi0vtkoc2b5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>870scu4fnaoh37h23e95uad33</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>gjto87d21fkjsl8lujkoort8gp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>963bm8cccq9dn1durs59j4sc90</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4fm21s68pachr2qdt2qm6losk8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ogu98v583uhnjo4rnb5v83rm2j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t1uicsh3c3emq9vuo7a822e52n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tg33bsekug1bp7egcvf6c17k6s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kc6sn9mdi205s5ql6qq9sglgt9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5ihec6vgrs9ft2fmaat601vbak</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9u0581qa6s2n79uf910jus2kfg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>dlt3vktkbskuvi7jeivk5s5u93</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h98469mk3078c6hrupfsj5qq4s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jffon950l4hiroihcm8rl4im8h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pilh682tdcm3ud4f35vf7f60sl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>82hgv3ojl66iv52l024jlbi7jq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5hcd17vvtnkovlpmgn3unnlbi5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>eikl8pis61bkebc579fmh7dimt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gp0h6icolbu2ktqngssel05jpa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>m3jhi5i0jtt6ngstmi4n1irdep</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f0gpctgbdguqj08lm8nkksbcsm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>thila5sg9s6f9bogki4r5eo4c4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c1vm8s481e095r9cjpt5j0mvgn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mqpkkfl5a2n4i3bjod26qjci3j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r2eksvp79r57ap6gifokdjqven</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9av17rhg2kp60c6fiu9mdd8ie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i44cbcljm6ugvvptb8hqq6lhmn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>9u2q1ikc0il60umrakpnbevj73</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>61oum70v0tt12hj5a6olphl9n7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8oihv3ngf1cl2v48kmfntpmn0f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i1g77odg317levg936o8u8saoe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8i7fgetmk3lfefmi3p0o13roqa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e4a8ka718eqt0b0gbrl1g5cc1m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8vtig255buda0u89vpi7umc7ih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1n3mgk12qugha08bkpleeho6sp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hbcrm9v4eo0kl0nf1hvk0ronn4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>t02lfjmr0m19m7pl7rhgd0rcdt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ig11na11ua7tn7164p42o5s4r3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6m65310mfqfrppgbk862tfnrb9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>o4ud3umo86gijts14toql66mno</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>klh0v1ievvvcvc1o4ilsj95dcq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mgmf4q3nvudj8tnkoomr7nbe1e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d9trbe7p5avqo9oadu1nv6uk7m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1j9c9l6jrjfvr2f0qqb2js2116</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pebus32mtm5fqvda6979h81234</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o09582u7hebn3mdunmj19318ao</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5864c95qpmbeuclk0j3pbvl411</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>aqq6mcootqucu8vbp63fk1ejh9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9i2cc028g78ct2am482s621gt3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>f3cee1tae38m8jmblfopgs8p55</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>if06leemtamlud4un4kpvcmiqt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ks2ga9fch6ebuko9qm143jvum8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ngo3hohlpu15u1bkvg10ael6rq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5mujl2cets4804hvfs6k292778</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o9qbb35etg1haa29fk5mtb5nmv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ulbn8e6k6vb330dfpra1m6emn2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>l30ga285erer1vedfat8kt560g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9o8fimi4ntckh3k8sjv9be9jgg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ia86qor7c87g1s33fijni0cg3d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>707q0fa1lokt7r7nackdi2cfoq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>js96ffofju9jldrnkvh8nna75f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>9a77remp9gjj8883h4lblrhs0b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5t0spt91tamm77qhufruqmd8aj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bn9dp9ms7r8auhb814m0tkqjou</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4usek084v9l8t574ekkpnbjoe0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>f6vm1if2urvh721om9d47iifvm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>udbo6jbj8pe2sm2gilrrg31v8i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>v30nrs5evl5vo6q939v6achc8k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>92mhe7jsruq5265ac2ep76mm40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>4f3mo82pqq2tsbjdhri9ni93k2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>17t800o511nj1f0vgeurfrp5pe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vsaavt7nip9ha32ddokfvq4rvv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5gp0m9pos9ip5ctksao1md5reg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dqg5r8pn2lchj8q41hp81f49o4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>aa3rf5okc091u1t0r3hs09naqh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>jd3rffscqs8vcasnsks2ij7pos</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8g2m3n4nnvq90p9993f0uoubb9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>k36vtts059b8cqgdu3rsg98hk5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>isg1mvo3pb74n1qj7cium1tdcs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jmuq6uq4qk0krkn7pep7b5ba8a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>35vs2nailqfnabqg6fvmhgkmdu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bdbpagr70mippq9g65slfd2iu3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ab2214ilpas5a4750bhk8oe62f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i3s4147c31qors8e3dufur846s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>c6pj9acgm5e5ba27p2afl1vstt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tfafj5s6upn33q2np88nhnfmte</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5s8lvm298recol0qahfq5r96kb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b6q9ldm08tqrp2np949v4g5hmu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ocdlbhig175jc2h9oon1cojp6k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6marejjhrssvvgb9r149r05dg5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6dt18c1a4icehfguk6olmc5usr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qlavchmek56rs89jejujergvc4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b8pf76im7j1ub8gqa6cv4tsi6q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qrq8jabh4najrugl63ih9fjnkk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gqba78443d4heha8tme4hmkh7h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i7841uf1ng22aqj1urm5tgbbtm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mlf7fhoic14m0me350re834du1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n2gsp3mbg6krvkhkh7ujqsik2g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>cboulnispm1k3dljf90pg76omq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fud98l77enjebcr1ira14a2rs1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gqhv3ruct95umhpcu854j2adi8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>48opm6j5lc8ddf174cjr3g2mgg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>446aj3871iaktd32rfgfi2tpe3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>eevfns88of7v50b7h9qc94vcvs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>30cmmoj1fkmff3vjs06602js64</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>irqafs61jp0tplf5jbjqkd4f7b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>55t0qm6ef23q5scplp3l7ktm30</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2mc3l55qks8gf4uroeaq28iib5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sm9umjemfehstlhbmb5eoqi2o8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tr8i7tlkks9ui331mma7cfmq93</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vlu9r9unesj6ojmli4j7m43td1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>ts2qkumoroj3thek9o1v73cmvi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qqbmqff5oaf87dk2gdbf73k9bc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vj38theggdb2rntibdc0tbonqm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a2djf9lptt9avkiv55h3b7vnj8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gad9os9q2iml8sbdj26hjvouss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p1spfe83leepu70dn1006ku5f3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4ku8mfe7htbelpq6aj3q97l53i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tiqrishl9grim9f77ie093qgmc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mpkj7clloddsq1bnnd5hj7ltgs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qd01sk8p3d9i3s77pkgk14r1bt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pcnk1omlq9aqcumsnpjlinsacd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ijbm4cbug2epg2fhunv023fbcv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gmmlb1l5nqd131q8ii020st97l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hni9vb1fdmi5kqimbp4ecr4a6e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>un275rfc0jupp8u35jptv837vl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fdk4ebl81mqpjtl14hakgqqogs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bsobpmol9ubgqtaqea5gvaaep1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>64ogk9bms5slgcak0gfb5mjo6t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2hsev9jiok5l4210pqp6bv1hit</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>acfp8go7ub8mrpcvrl9eehmrt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jdm7uipfrm7f6t9oneirl2cofl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4kimg2vcuvfb5v6rjlbemvv4s2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5qg9lrktlpotkcigm1upiqhu9q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mj0gvsg52lt09ng58nk7vic6sg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2dssclr6tg6cdoajdtu8b2bu2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hg9652t3436np2grsu6rkjuric</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>uma1r8a60t9cqj6j8doujj3es9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gt2ugek7fm2t9m0q90on3v1eeq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6e644ktjtandjlifvhe9kgbqv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>d8i1r803a86rhqb99sfqlctkh3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vbct5274ddt2od97q45j6rtj6u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ekg8dl60p983t584hok7njcjom</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>b59qae4cb94hpf3lvn9booc06m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>54fk72rhneo8kdk4lc7ceagkpc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>38im9chdjdrkg6rplqv6oh5k6t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fs4rqmmfdl4p42bmudrd6ncvt5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6c64qgsif2revhslq2u5nkpn5t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pkn5bv13s8uidaith63b3k9fc8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9nbhen5ai9nqcdlcfmqhfkadqn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kqcc6gt4brm9hn159jhblas2rt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>grbqqosfaqhtm4fchc8772k0t0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h4evigmb4a7cse7imunbu60v2a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ckg4rtn9pb93sp7sjmu2gouv2t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>onmqvf97p942ffe68tftd11dns</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2j6vpf39n5hlbnqnqgp9ov7e3o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5mokk6bvcdpjuhtf5n8dhmtpjt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>5l4qjb5u5r33l7cp5ok25fen8a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>j8478dtjjbgi40bo6mnko60eka</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7usqc9ks8u8m36l0uuhlpjuabn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>8h6h17hjqbtr38oegg1codl04v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pdfk5glnnc6264o2vb97oro4bf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>stscdu9ts8cmsq3rcaghbnufl5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>49gqqkrku3h1ui7h2jo50hvl7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>er7u2ho9o64td9tf62en868qj4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>dposaqjed4qss1vivvacor84nj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6docf03dusfji73bgolugj7a47</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>44oob744ddedmben62u4c1lgfp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>aitg13ujr74sdlporelke98bm1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>asp8jonbqnt7dhh61ubrdt9j8s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>455r96cp2pocn3rqcrgo5kh6pn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pv625rj2bt5bhkdktgd7nhf9tm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5jv4sp6v403v9bbofdslg8e53v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>ofqnhisa1at8b3cd7r00ebc8d4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kbff0n02c7a3sn98lgp8ghq4p1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5ff4sed49njfnspjrkpv0qc3aa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6jb9hjkecoso9gpekop4mcuknr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4js8t8ap6i3rt4cid25ul5a8l9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>55uuv5i7417rium7h5op9qp5ch</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k6vp6te35rgsujc8r0sngpem7u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>n650ocpn635hgfg280u0p5nsjq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vmtkqdcrfdl21n6k7439kvnce3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>t3epeu7f9emk5j7rqgqo7mg0av</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kn75me11dc27fpvv1cpbvdscjj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>12ipbn6mhfv2656dagi03tn9g9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n8bpomh9chj3imtn8dqq2tqo7m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9fdve9rtrsg9jteujp37caq27f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bfrcu6gh02qkn3lvl11kic06ge</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>d90n782rki1fravg0onjn7o4ra</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gt0v3cvssg3kao4d0kih2hmhe2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>crrhm7f2ouklvj68af0hfh4er6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4fmg779u1bgsigtouv5dlvl20u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nqjf59fbd4nrvd7k1iogglhuaj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gq1e5qfi2icufvf65j9i346t7m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ui19962qcl719umk2a6je198oh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bde5lhle1evbfcicdendrf09lv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>25v0cnsqv4lde8dgcdhtqtei5t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>com2h90esuvi6k53ivugf4naon</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mjfrrmncks2e9i2iu437nnikk4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9q3sprneane77gr0pd98u3fsfg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>opdt4fetnogp2kkaj4eio5pp16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2gkhj96mvksvgd4v7ugmemie22</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>iorrlmlqgmimqb76iisim3cfs2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>81lqdqpavpq4407uvjhpkt01cq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dom1pjbv6uv6biqbn6cum320i0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9f2f20q96vvvcmlogv7nhi9tc5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>jla1sldctj95pkbt4f86vvilcv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ddo8o7brrnmi0urgnp29t4cmod</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>vt4u295p6plesrp31813q5nhqj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9997crsmshsqocrgmrq6rb00q5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d974u5en7hj0fdcds46qvo9q8n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uhvrjseut1spubl7l77pa6f2oq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>md5bubd4quk8h348pt73ppdgde</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>cnltqsbejl50qgb3oi5cb76feg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2gf563pn8e87i8tp025h81n0h1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>2724nomb90o76ju6acpkqql4de</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k6ttmkhi6d9jj363a8kprvoc7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>alsigo4v1fmh4jf5o9649kmq7p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5kd0gorvjcmakaf4vuei16jmq1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5es7je3bjrvdpa2smes7l9efri</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>gkgitbg845j71qgv4so5b8cr59</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>2stj18jutg66fcngnci703pb8a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a5saecds5all20op1ahpnl656g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>44c0s9m0ef4got351to1vplfrh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cqgc2kpp7pkj9pbpnct6ivkme0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k346b5btltv9dvcu77as8n891u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>581f4efmf807isnidujpc0j7q7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dn36vc38ta23oc95ei5oerk0o9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>k29dfru2hdbr5ag0o8ov0lb6gc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lp30bs94553oufbj99j4rq5jv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.z: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.z</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1uvh9c0k3rrupsj10irmsgmi2f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1p6g55ed7ku8v8ia3qrif8rqd1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6r31arng95prnccrlqo0v1m5fr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mkmm2n2b9oh8cea8da3dkifhgj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8ceu3rkphaobplso896uminm0l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>42dk8gdov8772uvvlco14idoge</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9oilc64uqiti5v7au21ine4m91</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ojneuccpus2dbsub0e3desc7kt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6aolkespo1g52l706oa754ffon</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9lgff8r0b8v7pakk6le9a83fst</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>805rqm88bhjdlis4v2fed0dskc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j2bjgh2qagjblt7bpi0idgdibg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>f94l4bpon4gm2ukis71ssjrbva</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ru0qcofqj84mkemn34onvtihrc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l7hmiljvr1b7ul8a86amq74855</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>sf9meb34247hlt73unk37phft0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.ac: void run()</calledAt>
            <sender>com.evernote.provider.ac</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2itjgup6gc4739d70fpph5ltpd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>15bkpsjlmgkvanahuiabpdah0c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>73bbitftmqt2dqeh6nc6goomkb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>h7rlqq6quucg7n3ubq9hlph865</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2f5tq0tn52r9skt38utcidh6f6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ch91bsfcp7q0r3hj4m8nkhfdus</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vhbhih9uu8bfccf8ig0f2hgscv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>827ahfu9h1flbpn74qu9lnfj7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>na81rdtkmj1hjd25k9psqqn7n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>u785f6vpn4od34mu6a5skuftbr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tkvgp0i5gdgoock71f3nmsm979</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>aq022dqlvhscbf40c6pnjchih1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>59redpm3nbjquqeksccekrlo7t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2n9r638drqtquf3pahfo1efnr8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>393nrvv5hh7bp1nlmd93dglg8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rduhsos1mnk7di90f4n7ii9ibe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3i8nvessks5urt9ghdjb14bc7n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hj4gbkrrrfhnsc4opm60r9de3r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ph: boolean onPreferenceClick(android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.ph</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PIN_SHOW_WIDGET_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>obfnkdf5o1que1tbhn65tt9tl6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.ah: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.util.ah</sender>
            <component>com.evernote.ui.LearnMoreActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hv6nj9cdqlm8oi3fc7dn4bc56b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>bm24upkmoqi67qgofo27bp0q9l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1339thch1n6fjac1jsok1ed7si</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l5c5rtbeptvcr0iegir983u3m6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>js6j4h8fqkrme9ud8lmcelpek</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9i11hf556n5rq83kvv3v7i24nh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ads1927atgm703nkide0a9a71p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>htob830ualujt5kbf456doflc1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pcvkuc0at3akbk3p18qgqsfqdh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>pv1v0lbmrje5rhbh0s31mmoenp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hmm2olmm2quup81c2i62mmeod4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s7rdir8sr7q5urc47o3eal7qpo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>cbjqa3gtqultpkoie9cjnga24v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a7vfprvgbh54mrqtt5fenjskbj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7btpegdkm3qehbkc58cncjdn5m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.j: void onItemClick(android.widget.AdapterView,android.view.View,int,long)</calledAt>
            <sender>com.evernote.ui.helper.j</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mkd1ec2nlp698cpl4m0kres4gj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aegurqh470arn7sgsf7tiuq2ik</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c6bipskia4slbmfvu20h67039</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void c()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGOUT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>f1cbooj82l0mqlt8seub4kur6d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>90k50vrl1nl6vf68vhvemfhd6f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lcuptjig872dks6u470ebcf42b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6hmc500035gheeis3cq4k6s502</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>aajm4f4s98hjil6atat11osegq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.METADATA_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>23jtcmqqeo0k08edunvlvmmhqq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7ij2rtp8rhlc96u38b4ghrv5ck</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6l0u7g27ioal8kgl5e90g14mdd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>99ors1qpfdl0eqv8oupp873s7a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>etrauqltsqhqrdqafqro7po8li</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>a9h42dr2fpi9o1ifppvvv684va</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>io1ifeik6114isk4a3j5imrjrd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>n0lvhicuca75va3jhelolft6gr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.a: void b(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.pinlock.a</sender>
            <component>com.evernote.ui.PinLockActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g7tu2cc0lqnfceprc963o0tiu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vbsacf30bep33in64frug49689</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1ehvn1s0537gcpla7pd0sipd23</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5emk7s3h9orcq2cebjj2a7plfp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>mkqb0fac11j1vvqc1nb2q8s29q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ccn02q7i0c8ntnbul7mc8tm8ve</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>j7mdr1fv9d8am5mmq9sitdouoh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>oli3ud3fpf7sphkposds4l6un0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$16: java.lang.Integer doInBackground(java.lang.String[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>63nf0hto7eukgfun1bs75tn86l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i76q8d1d6lcvc3e3rj2n2l1qvk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bj307g1ecubqan65l2pr2j6ol6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r2u2hbjf98bqu97ka9ug9ah0h4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fte14kcqrv3rn7gi9s9a8v9vsg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>534m1dqhimpke7b5rn87p1em2b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9r6u4j6c6cqje7t3ndbglm9c4e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>59vb6i3f13onqu58tscqsm8j4k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8o86hjeg7n61sdjcqjkt28f3bq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o44i453drngor0h7cmkc6u9r4g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nn4qdk7uke0p495s39e2jr1gam</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vigjc4reo28bpieo85eg1kkvee</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>s18k8n1tpu8ajh650kdl0dt0u9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>t4rhk7me04ru02sqdbsdb91jpf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>16ookt18s4te47l3a3d4sqrjhn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>73fsqcrui79kgk3i7b8rjfpncf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.by: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.by</sender>
            <component>com.evernote.ui.RateAppActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>getre3hckdob2j8t13qd86qv44</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cg2dr9r3b9pjns3eespl0ga98r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hh7931qptcgpqr6bj5c3j6vmh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9erg7nn8t79gfehlmm3p3qmg2b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k5fi8803e707jb3hcldrgn6pf4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qn5bop15kvsealvvq8acobcscp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6tmgeg0qfj5frshcjjbpnf1u2n</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>b4fps6opgob3rmuqfi3evj7jp8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1ghgdc4ufjub9rqnk437ntois9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pjg48vdmr1ofrnbe2hbsb2rpa3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>knp88oqdkl1u7r1c5ft9snm2md</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fle5vr5v41p0e8mbllihrjcann</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivityForResult(android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>k222vi6lc0q0fdfkg6e4c3brth</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uss9u1ep4i20ln8n7gifh9c00e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3ednmi4293b29dp8utga52avdo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j0jkdq9c8gkid7mj5aqb1dlj7o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lm2o1hvkoj4hq0fp8sj5fdi4r0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rnan0l91j0h2f2oanp3fhus9ie</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4v2lle52lb0nt47bcd7p5prchi</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>aek016u4rtt36shvqqhmvq64lf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>svrlcs1lo8tenji1qp4frdeeqq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r6j7hhq0jo8cg2t58unt4r21on</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>m80o724f247rq8515qpjfu2v43</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.EvernotePreferenceActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l9j505vu3jvrpvfk660taenmrd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>pgs0h3cd83jd7navin3jo4qa3e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>m6oe08hqnl6uighjr0vrnd3ou9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gu222e56g1fvs8gf27ui0b8a92</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>cro2t8firh7ml4st0asb8nl91s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3me5d22sjl7km0u0aj97lf2o6p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>og0ri9a0054qum2r046du62as4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>e1nikvk8av24c1l2vlanb9uf1q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dmepnt01ve7abf7f80nv8i3hd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>m69o8gdk1aadcg47k0ef1dupv8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>11pvlgfesdfv3dh2p6qjn3qvto</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>c6nuna1ohprte6gd54tc88peg4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ap3mne7i54t8a9s6ll0r5obq5d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hf17fd819io6tn7ptvtlumiab</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>71qj79a1kvbkkivnpl78nbktd4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>i18ko2qnkoiv9c6sb4jpg746tv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>mmiu5ueguco66eimo6o680r30u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g20rmstafvd2uusijesossptcv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gkkqh68dthableanu247ikgl0t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4sqtddcfb4jmsaigl6r8hs68aa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p0lkdvn7gm4b13mbdssah9ss2c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>atnjnfdugs6d1vbodm1t3pa8tr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u35riheroa57okvgf36ascmsq7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p762e0pdsu7475lvo0gjqlfnld</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jqr48a1l2iid13ih3kbdn0ggpm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5nmjvjso31m5tn38ii15uvmvlp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>dc0cg6d65453b0pbqokso654tv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>icnfug98ric3g0hjcupe654fep</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q36ktnctppkri81b1k3qm6tmuf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2sdb8msbchjhe6p40s346h20oc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gpc1h5tl6nq7hasnu74tqg4pif</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>efr9h1h2ocbfdcrknd3bnge4le</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aq12v7vste1vr1v2mflua6qd6m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>fbagesnf9hlblrb53ughvt564v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ac05inakjtr997hna7ht0e0mde</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>umc3amv30dq9292chrjf1itad9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>28brip4i4q45p2lrftg2edabct</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>poognke9h64jner5lshfpkgjb1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1egg8fqlud2publ2m6tk3bdmnq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ck9ci6ogq8odomr3dtint53874</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>qmv602qitdqjr0ul8m4i558pdf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.f: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.billing.f</sender>
            <component></component>
            <action>"android.intent.action.VIEW"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tfgts32akanhp0q7st73fohle1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ff44uvartab9e7vus7lpfmv0h0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>p6lmdaus313h7vpmv0s6100grf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>lfu4uqer662d00si1lo04jsilq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8me7qirjln5lubinqs5sjkd4op</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>e5o6eos1kpb8l67p3f7k4ka44k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void E()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2scb2s7btjqd65tdtpsvnf8vu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hh817n2acvka2c0lbtsf1c1bqv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c28qnf3g5m7id3q9o58ernsqp9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>86riggvsnb6sah0ufeenvoh17b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>98abdgdnk8f9d2em5md134bucu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4jg9ffs34n8lg28tahtgqtdanf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6k90vtm62sjep1seuuapit52p8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ohhiq95k8vrkk8m3v36kko647r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ju: void handleMessage(android.os.Message)</calledAt>
            <sender>com.evernote.ui.ju</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>8m8nn2qesbrdtce6013r9r9in8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>id3tb1ja956lpnacki2jp7hcl1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kaltkvbi2fri57cieboee9ap34</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sceh0t955ut9kr0cv5j5oo3epd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_CORRUPTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3p5lsf3ga1q8moii1qlfm9isr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9pkkif9438175dbt52rscg7b7m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>r96o6rv2ddspedj63jb79jdo3i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4ts9qf7siqpbobompcv9g8cmj0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l0ph6h6da2t9so56pm8t4gjp43</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: android.database.sqlite.SQLiteDatabase getWritableDatabase()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>e1rvt8ee737dbevf9tfc5nuqoa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qv6988shcoqbi69dkcjttakvui</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.RegistrationActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4r2kvd871rr3bknjcjfa88kdik</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ea: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ea</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6ca40poot272k1p9uapr2osnki</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>92asj8thl40fms34b002uko9g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7cj8q5kr4i7j2m0ddi0s4o7gt8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>60map306q26v03414tdjv96jqc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>asv7i2du23b87spfqgt0vsavq2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hp4kfv5vlittut4nngad3pgv6s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gn8uthgt0ank811ffbaqhrvjv6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>7mkb3t4j5ata4jo818hrfe04lj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1vq3qnb022ucfjt5beo1p0b1d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5d876lusj1fqfu155npg4aqmsc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2kacjv39truasnif51realqsc8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pj50gces033n7cb5iki6ja612c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean c(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>k9gvgtnigafje7l751aejj8g3r</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bncumt4ec6p90qp6ps1jeuluio</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m7c0ob8hmve6iejge48jf4j606</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9rbhgab3ekqrjhpkgtb66jctas</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>eqkl27au12hv0o526s8sjfkbfc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeFragment: void O()</calledAt>
            <sender>com.evernote.ui.HomeFragment</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>isa59dock53vo2pgucrgum0r4p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>p0o2g86qtq08hti5oeld4qukem</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.ui.SDCardChangedActivity</component>
            <action>hasValue</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g0gon8mju3j6me4udvbqqus0vo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void F()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9f3t8hgaqstiq6mdpi5bqu040t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1i9ktj28f6c9lpnf7neul7an89</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>qmevk40vebdakjp0a7av80gjso</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ubock05o7kfqc2vm25q9g6qpu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9rk0tap94i54ruvf5oivmhd9om</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>pdb31ikf2b8hvfsco7idtg92dp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>d5cub8ojglqk9ghuihe92shigg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>v5qt268tt5rg75r6mlmc0j02q2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gg1klhh6liibkpjmmajleebfm0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6ide9sfusbvakbf2jm0ivs225h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>od8826bmivbrlttmjd0qkj1ojf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i2s9aaqup46h130g3qdgen3g3k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>k5rq21cdl2mvm76gfnsbj7ti92</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cb: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.cb</sender>
            <component>com.evernote.ui.PhoneMainActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kg3pfb0g6fa9noj9c6pivksqb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>l02rg3d5q63b35mjcib62s5m43</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>6mrophjm2t91gmn4psgmnrt6bv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>5tan2t8k6a4k1ohnk3n84qstf8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ah: void a(android.content.Context,java.lang.Exception)</calledAt>
            <sender>com.evernote.billing.ah</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vnc47be23kg2lvd84o7uin0dfu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oupajrqfbgk58938qntoljcmt1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p2hl5tssmmjli9gomuk363i1qv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tg63chh8hkgvdgnb6psfbjuqg7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sai9a3d8daobc1k47m0hbmc3v8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>sttlnvcg1qe7r1h47nk5078fgm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>velvpohn7gtj0ku380fp50oip5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>fg1ui47ngiampeimrb6rh5ttb3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>qh8kphm0voca6ke26bm6joctr7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>v2f6ojvbq2q8qftsts2rtq6tjg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingActivity: void b()</calledAt>
            <sender>com.evernote.billing.BillingActivity</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>mm1fdipfbs6tue9ado8irpb43t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: void ab()</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_TODO"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2alr5tt5l3v1shca3skm5e7bhs</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>b2969jte0uhbo9dg1ln0g2br2t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p7oh7j91tesd6klfjrj1v65l68</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l5sp7a56rrn237qebkfc0pkqt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void G()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.ui.WebActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>7jjmd6ponimo4strdofchd0an6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>tehhgl06e7ul3mu9ihe92j4f2u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sq1vsukttqpmth0efjohq7t4ks</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2vo18v504dltln0sff3p0kf9ll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s80s8maobu8v0ocjt34tleb4p6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>e8m8ajl2rdm63nkvhqvg2jv3o0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>u9qnmie61mlulp9gnmcqr5tp00</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>caovslce4aq917gms552nvgoto</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ihu3snjm3rore6ad1gnkmi7hfl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>6nsterhfjg3s53nsmped0apvct</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void F()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>8nmosrqod1ph7a9kkt4kbd98v1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void B()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2ep76bnqpbic668p8cgsc4b7tr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hmjv2qn1a00ok3ne52f5m0doh4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ebuqed2601fs3ks0kmkm2ad2ob</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>nhtno4qeet97j96qeoq1a99v3g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>3h98qfsrsctkduaq9ltcl9m807</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1amcgd5orljj108bdvoajgjqej</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nb0k1pah7lqiqntos7utgc7d21</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>q8uc1net45qngheut93mc75l3a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>67g01bfk1cegnprko3q0bs72d2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fra5dd4dm5cr6267enq2pnag2m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>2nailkjht0p3unifsuupju79l7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hvp8p746oj1qpfdnb6goqscaih</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7khci1e416dr3ttn6ku23p8sta</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>5i0600ov322u9s9urna72lgggm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>595g2d0ubcji8kl6ior1qsik7t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>h5ahf5o9g7265o4doc99hhjk0c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nervv8h5bemh5ci2h1eraja57j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void b()</calledAt>
            <sender>com.evernote.ui.OfflineNotebookSettingsFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>76gh8r074kg7967nvs5013632</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>1ivjvp18tckuj1vf0ultoum38p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tnk4drar59eta9a5ts4modhoh5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d6n4b961klt45ibd17p1ntesob</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>npl8gfbpa1igrst3lrcd6hoath</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>3brrikn6u4jqtq7upmrkokpsb7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>bq8j447qqor2d4dkn4f2ilmo3b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SearchActivity: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.SearchActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7kuv2cg4gov4u847dhi656qkqb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.i: void run()</calledAt>
            <sender>com.evernote.provider.i</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_RECENT_NOTES_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>96oiubv6rj5osjjvh5rmg4f4nh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>aju92leadf63hi46gjdkf3suoa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.HomeActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.HomeActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>dvoc6k1p6pbsjpfnf6kpplqjo5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>u0ea04g60nc2vj1cpjg1gdefaq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c25jsgrs1462fsg8k2kdirt44s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>sdh3ut579h846r8qb3c49k36a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rnmc23carc7j7utmhckvsch70q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>inobpdb5bu3ln1pk76lq1tdq7e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tke9jd8vv761punj7hrr2qg1kk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockablePreferenceActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockablePreferenceActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>bjuuc9img7jq4q56q53ea2alec</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>hufu9ts55jvb2tu1l2i0in13pf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.of: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.of</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mj7r2jt4b1uq3m2k5jnm8pgb81</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9bovsm5h25h1umaruk9f1klu1c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1aup0d43cpqhiqqoqavvp5abor</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>1dd23v52umodvgn4sb7munn449</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>nttsr894bfj5n7gjuuc92lgned</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>n7tqlcujl87kcvi1ajfm4bk1ik</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4lq8fbg5lkposrvsctg0doch3p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.FilePickerActivity: void a(java.lang.String)</calledAt>
            <sender>com.evernote.ui.FilePickerActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>3kkugjiqjlhopdtu48ov7m6o9q</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rgoasctqi8c465boegu29bcav0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sp4d9snk8t55158von2ons3rv8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context)</calledAt>
            <sender>com.evernote.ui.DYNDialogActivity</sender>
            <component>com.evernote.ui.DYNDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>p1507bba26aelg4s0sh2vnbbjf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onOpen(android.database.sqlite.SQLiteDatabase)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_READ_ONLY"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5c4am0pstmi7k90frsrfn6s6hk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>luv45svokcm2brv353qq70sq54</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.SAVE_NOTE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ebk00ogv9abgn4f8lr9cvb420g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gqsm2gis1oqi26efgdln5a6hit</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uggbni2684bm3iq32irjnvuj9l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ogake2998o92hk6mhsqjhj2r9a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.SDCardChangedActivity: void e()</calledAt>
            <sender>com.evernote.ui.SDCardChangedActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>mldp9b1o5co2uosseb704kfm40</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1tu736titedqh5taq7cied7ns9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rqreqnchlpgaapaugeh5p8m6b6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>lm77rkr715mrv20def6vhtpotq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ucb0d1m5jgi7hlmjcgs8m82b4u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>uj4ei49667oe43is3qroiibtrv</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>le6reeluo1m085eb74nu72as7b</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>57eq102tu3dtd7h2ct9gin2dln</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3g9np93sq8o4k4touubujil1mt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>trmr4tll89ug3rkt9rerlji5ns</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>f669kk6f9mrlhvvtfudd5labho</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>tivih8m3a9nmls9kmkiq3pvu8c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ndpe7aj2dbii71viqr2g1pkle6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOGIN_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rm7ij6hfuhqmj81smffi2d5ant</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>60m3vtuogpt9r5vrvfq4mg5v8a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>a2k6j96mmukc0r68gg1akobuj3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>skvrhggso54g62nj90ged82vq0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabletFragmentActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.TabletFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>9mql1jb790hqsvs2aphauq8qri</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hliqln90um9tcll7s7tdpro5ul</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void c()</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n0b2ldscrq55tnc5p7at760c7k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>rfhgeaha063kvgl5aggm221tn</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.StopAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.StopAudioNoteReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>iaon9amtk2qf6lof0di7mj21pt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.q: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.q</sender>
            <component>com.evernote.ui.NoteViewActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>imgtccg15vde3br99s81rt77q1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7l197l63jcarv97hcer3stg6mq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteStatusBar: void i()</calledAt>
            <sender>com.evernote.ui.EvernoteStatusBar</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rhk55go3tqu1rqgo4imu52dd7k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rmmgn0s0b4gmr2fpsb35q9l4m8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>c5ihkk2jg0959de4eelo8d4n7i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gmmlvkc651kbudb0588d2vf90u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>gnnmdrpp99p037s4ja5ml0vnqo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p0l9ecr2p5k7f8b4au2tio4c27</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s4k91oq33ei5bi5pv4rukrralm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5jscpmn3b9eouid33holvk3q2p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>shts81723cstb4cq88gdflnk7e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8t3024o70e6i7nh8mvjg54t3ai</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.cj: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.cj</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>su7jcl7darcpu9nkjvbt2lsgn0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.LiveKeyAudioNoteReceiver: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.LiveKeyAudioNoteReceiver</sender>
            <component></component>
            <action>"com.evernote.ACTION_STOP_AUDIO_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>8quopic913kahuhp8c3tld44uh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mb0n83ad56bdp62c6os5gue5d9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>60934hfnk1vifm6vu6ia0upv4c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8q21d3i8ost1f50nu3jrcq0fpl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void n()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>6uj5jiggj20fsc09up7952m76i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>25mj256hu8kmt02rhhkgsaitav</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8l6h5fch1lmt7f6ulaltl8rfb4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t6f9cu88c2fgtep5umgvnc8nrl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>kh22jn6fsbv3s94rkme7i52sg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>fplk3mchkv6le56susqq4ol2jg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>m19d0sua418un9fn2via8fltdf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.de: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.de</sender>
            <component>com.evernote.billing.LaunchBillingActivity</component>
            <action>"com.evernote.action.DUMMY_ACTION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>g5slq7r0t8gpnk4h28qecprm6e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>g8pn2nf13mnt9s9g7v8caj2v9t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void e(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>s7o6roqtd95ovd2p99u1p232s8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hgtrqv9asj53inrc9relhsf8mk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gmdjerq98k3q9o63eat04k005k</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3cmp65md8e8rj8tfj7giaio66s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>lgjtj4491sf2re8cr1o5kv5ijt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>pre3ehjb1s7cjdfjdtngk5cggm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fseqejrg2kjcgn4cdkatiedtc6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.evernote.billing.GET_PURCHASE_INFORMATION"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ug63pl6ki3dhoa0e9pu2dgs3eh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>jphfckl2kpvuso4itcrimb3vf9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>js66s4gjop4ksvqj72u5omj76g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RECOVER_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>3elnind0c6iqiebap6he9368ro</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5j9ek91140esekq5nceu3tclke</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor a(java.lang.String,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nmio3jg63vv8v5v8amqr0md6m3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.WidgetUpdateReceiver: void a(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.WidgetUpdateReceiver</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>erk0s24g7ebmidl6j4veq3ueav</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fo292smn6spmk9qlt2a83n8mod</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>24e6rj7luqs0lpgafe40ahuhip</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>psahfmpg9gpvoh2jf9elrbavoq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.aa: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.provider.aa</sender>
            <component></component>
            <action>"com.evernote.SD_CARD_STILL_MOUNTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>p1nbev4fmrk1c07mdjto1uaarh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void h(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kqit4ine402u0q9pfoq9m3q6eh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>605kine0bslrhklfh6qel05u94</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8lmpdpg8o6hdrgri0ga9d7dd5t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>9enojf7fnp9glme6sl735bicfp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>3d5cuh0vmbmgt1g6jv2cjc3m11</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.ShareUtils: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.helper.ShareUtils</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4ncqia5118ju9r71oqp8skihb5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>kkqc2u1j6ln3dknvcfuv83785a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteWidgetWSnippetProvider: void onUpdate(android.content.Context,android.appwidget.AppWidgetManager,int[])</calledAt>
            <sender>com.evernote.ui.EvernoteWidgetWSnippetProvider</sender>
            <component>com.evernote.ui.helper.WidgetProviderService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o878m3mbu8f6b2b8j8gpgaeaqb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.PURCHASE_STATE_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>r46mhv2iv4mdepfop97aooihcb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p2pfqg1r59dhepi418m48613b8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.ai: void run()</calledAt>
            <sender>com.evernote.billing.ai</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8dte2736dti4aq1ojno48b3cl8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ouj43bds1slv212pg797d1nhap</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vu9rfdd3mt7r4q6h8nbfund6sm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void C()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.GET_CAPTCHA"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a752fvkck7q338cojmui7rc7g8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qa: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qa</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>d5k8nql55ftnnhtuuhndkbpro5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jpnum26msrpeh1vequrfjljt1g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>mi17ir7duofvvtdf19jur2ell7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9ejjiniqsdrno2h064v5d5e4ri</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>usps65ru1t46k7q5416qel7vnf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TabManager: boolean onSearchRequested()</calledAt>
            <sender>com.evernote.ui.TabManager</sender>
            <component>com.evernote.ui.SearchActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kq4lfem6u2imbrbspfsm5sln4c</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.StandardDialogActivity: void b(android.content.Context)</calledAt>
            <sender>com.evernote.ui.StandardDialogActivity</sender>
            <component>com.evernote.ui.StandardDialogActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>taq1dcc1bbc2isvpo0180nql8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: android.view.View b(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN_PREP"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>esdmorlrkgrlkj17angk0l1on1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gch8iuosh7hes7as610lj2qb7h</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void b(android.support.v4.app.e,android.content.Intent,int)</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>gnrb6t2bbe75rm1m7g3kbiuiss</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.qq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.qq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>l3193cokjtlusr7jij44p6plnc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.jc: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.jc</sender>
            <component></component>
            <action>"com.android.launcher.action.INSTALL_SHORTCUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>khgrjnm1lp21125tmnkbptqj4s</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>al270h1krrrb075m5l9sq8iloj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.mp: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.mp</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>625d7q1nv3khocdtdk6sen2frr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>cddnk9il5akqe9g2k49v3tkmls</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vtmrmtl60hdsbpmpaqqs3snnmp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.AuthenticationActivity: void a()</calledAt>
            <sender>com.evernote.ui.AuthenticationActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2tgt52slg96rrlhs95o9b156aa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>gkca79g2nsur45c7jos3f26njj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.ex</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fnosieoa9ohfbgam6nh9ps705u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>4qnntt8tpra9loccvc4oc4cs6g</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,int)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rpfmdf19porblnkt15uokdgg7l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s2jrcfisd9ipk1jifguja22ppk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>t02b1tcq7cj61etd7eacuucsrh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hqcrmcf7cffcamb1b0lo4pr0n2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>por967hqbrhgb41ffr3h30i1ql</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.SendLogTask: void onPostExecute(java.io.File)</calledAt>
            <sender>com.evernote.util.SendLogTask</sender>
            <component></component>
            <action></action>
            <dataType>"application/zip"</dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>r0t18m2b3cdu92n6eoaihtjjoo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>p366g2mgk7hi1csi4apk3notkr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.og: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.og</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>1bg6urgvjgp1kf3at4htkbqumc</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void a(boolean)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>aaoll3re3ueol2bp4gf7c113r1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void c(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>75r3h2ckci66bh5licfdjgpteq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.MOVE_NOTE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>i11arsn8dae3rcgjv8os3he9f6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5kplrknuekphuvf614vrlgem98</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <sender>com.evernote.util.an</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>cba0nnrmo1qoi3tegsrl359uur</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.TagEditActivity: void g()</calledAt>
            <sender>com.evernote.ui.TagEditActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.UPDATE_NOTE_TAGS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>4tb2offaj8v8hdjnggg4eggf5m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.util.Map)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>6a747eotcs191qgmi57h02jjg3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.RESOURCE_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>o7gkbf8pnmkjrtnvdd3l9h85ps</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>d5aasaliqma75j5t5fkdlp9svd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>27le5p74753qc63id1pul740a5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>dmp3mf7ula2n15odd7kirvbp7f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.URIBrokerActivity: void onCreate(android.os.Bundle)</calledAt>
            <sender>com.evernote.ui.helper.URIBrokerActivity</sender>
            <component>com.evernote.ui.TabletFragmentActivity</component>
            <action>"ACTION_LINK_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>ahr7are3gfsmetae7m44a7htfo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.STOP_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>63s2e6o8dsns5sa4bqvss4d2l0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>214aur644lv4tnidkp214ur6jr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.NOTE_DELETED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>13d9jtgvji7f6fnp6tfhbo76ip</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>1sptgkgre32l5id5qqgjsr8un6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>vk5d65r6j696seiubaru57dodl</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ruliusq1s3usnmo4cs5b4ofb5e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>jmlugt3ljflhc2j35f9vno00fj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>tpfs3gbfvsc8s5ur8u161acosd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>bkmtm37i1aasm8p8qdo9t4ldsa</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>c476ur6ogkp2ihlpp9neqlm1tk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LoginFragment: void A()</calledAt>
            <sender>com.evernote.ui.LoginFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j8dqkdcdhuqkuqmmtkvv67c3pj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o9p4uv9sqm98soot0qqlfln6qe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>9f7mcsb5mec2k4u19ue5s1g5qp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.ui.NotebookShareSettingsActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>l0csbb2km6nkdri5o4mcrsnecj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>dsl6084b2iode9l31fdrmmsr9l</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void f(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.DB_OPEN_CREATION_FAILED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>ad8m17tuomrips4bgd6bmtaaqp</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>hc9lf0ok8ufctr2t7i2gk7s29f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nqujbu3q8ddh6irto0ff14vnht</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CHUNK_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>56bjc8go6j2on3a94hnevriqs3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void D()</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CHECK_USERNAME"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>1hhoeln8q8f7bovdlqp395qd4i</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.CaptchaFragment: void E()</calledAt>
            <sender>com.evernote.ui.CaptchaFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>7kvgb0shhknpgp4manhkoa6o69</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingReceiver: void a(android.content.Context,long,int)</calledAt>
            <sender>com.evernote.billing.BillingReceiver</sender>
            <component>com.evernote.billing.BillingService</component>
            <action>"com.android.vending.billing.RESPONSE_CODE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>m92p9tpopeofkohfnjjda9d20f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>l2okn7p88te6b5mablfifp1b3d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>rai3eqcgmmc2jhrgkooahisjeg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>hkdbcrad2a9ouso7f7fs84krkf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3aftgauafttq6e084gb2i0ob0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ResetPasswordFragment: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.ResetPasswordFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.RESET_PASSWORD"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2m8t2l1l7m74vrg3u97iv26p0d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.Draft: void b(android.content.Context)</calledAt>
            <sender>com.evernote.client.Draft</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>hdmgg6uds7gla0ftoi0p2svdjo</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void b(com.evernote.ui.helper.bc,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n713u03fp7imkcu23l9ekm4g3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.SyncNotification: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.helper.SyncNotification</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.START_SEARCH_INDEXING"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ailj21cvo811bjcgfrqraig6eb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void j()</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.QUOTA_STATUS"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>8nv51mp6k0paani5he2qsvcb9p</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>2om07n69v74u0338us9927po19</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>4nav5q850psdg45amkngr5k154</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <sender>com.evernote.ui.helper.bq</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ffu126ogqgu82h37l6t7n9s9t6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>j82pbe8p0r1k0e2eprcohe83ge</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.REGISTER_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>h237ftpb9aovlg8smeed52tegk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.Throwable)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>d5lie7jku8e19360cmgga8lccq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>rg3r6sv6df7nssb67sta1lgh99</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity$2$1: void onPostExecute(com.evernote.util.ac)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>n51kvq5deqp3kjc3tjv5mfn5o5</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAN_SHARE_DIR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>q9p60s7rhtgobsr1fmep94rno8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: boolean a(android.app.Activity,int)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>q9p2udk9r1g728v9jhejnkjhfe</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.CHECK_USERNAME_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>tn1oghropc7qnl0qhhf8bac30j</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>6lsi35i6bed1qp59cvsh0ppsp6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_STARTED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>s2v8euqi58o3ti12qqgg9moph9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void q()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>90irrgg0tcp64dhepb56ss1506</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.by: void write(byte[],int,int)</calledAt>
            <sender>com.evernote.ui.helper.by</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>jvjj2a05d8pm27j7l5h3acbngd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.u: void a(android.content.Context)</calledAt>
            <sender>com.evernote.billing.u</sender>
            <component>com.evernote.billing.BillingActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>a2h081r2mjtnt4b4namedeab51</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.os: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.os</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>euggokgq34mtnfjr90kju15j1m</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ee: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.ee</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.LOG_OUT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>gumhnhndbt03k0jn3cifv4r93v</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.g)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.THUMBNAIL_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>3irjv9t6dori2v3rfjnnkq69i7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sc6sll6rjgcno256ahtfhdk7qq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>vfh4kj41ai316u690kijkino4o</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: boolean d(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>9mkdm93mktu2o24fabu1bat3pg</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.billing.BillingService: boolean k()</calledAt>
            <sender>com.evernote.billing.BillingService</sender>
            <component></component>
            <action>"com.android.vending.billing.MarketBillingService.BIND"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>bindService</consumerMethod>
            <id>r7irmn5ml6ba5g967qeof5l3no</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.NoteListActivity: void onNewIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.maps.NoteListActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>udup1pb8i1dfif3fa9fgjbcqqq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bf,java.lang.String)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>8q6lr0ne4ncm15p6sqv3ic04fd</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.CaptchaActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivityForResult</consumerMethod>
            <id>h9pvd1oegifedtas85bq39cphu</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: void d()</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_HTML"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>sfehaclpqff7v4h82kgi39vqhh</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,boolean,java.lang.String[],int[])</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"android.intent.action.MEDIA_SCANNER_SCAN_FILE"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>vj37knh9hb96t5ir2d4a4jgqr3</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$15: com.evernote.e.c.g doInBackground(com.evernote.e.c.g[])</calledAt>
            <sender>com.evernote.ui.LinkedNotebookFragment</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>ninspuin0cqnbkvajr9vfkddgb</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a5k3n9oc68htgrolgor77p4ntf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NewNoteActivity: void b(android.net.Uri)</calledAt>
            <sender>com.evernote.ui.NewNoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>42725cdiadgua6j286r7lidhg7</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteActivity: boolean onOptionsItemSelected(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.EvernoteActivity</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oupe1070pg7ga1htb7ova64kng</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.kq: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.kq</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>qcsvcdopfr4aev21ap0qonjmej</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>i7ni8kqjbra6uahgg612rf54pk</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernoteFragmentActivity: void m()</calledAt>
            <sender>com.evernote.ui.EvernoteFragmentActivity</sender>
            <component>com.evernote.ui.NewNoteActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>eh0mktehv0i5fvr07jflc4m1u</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>jag6n7736hktkpo4k42op2g7js</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean b(android.view.MenuItem)</calledAt>
            <sender>com.evernote.ui.NoteViewFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.EXPORT_RESOURCES"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>2o1oaemlhhum3h2jmmbch69c91</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String d(java.lang.String,boolean)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>5o2db4a077uk48a6riv25lbr0t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.ac: void onReceive(android.content.Context,android.content.Intent)</calledAt>
            <sender>com.evernote.ui.ac</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>4h4q66be78g681fsjq458vds31</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>uqorj5ti06bn1nj65fiojri5rm</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.lg: void onClick(android.content.DialogInterface,int)</calledAt>
            <sender>com.evernote.ui.lg</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_STACK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>fm3m1j6uo27e30qmh635uvg6e</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void e(java.lang.String)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.REGISTER"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cn2ih242gknpb7s3khu90glub0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_REGISTRATION_URLS_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>fusgv85590duschevbphddvv2t</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>o9go1pe5m6397bakgf68r5kvjf</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oh0dmcr79f498q1f3lk5a7g0us</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.SYNC_ERROR"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>alu0erfgs1jcp01d5tbmmrlfbr</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.util.af: void run()</calledAt>
            <sender>com.evernote.util.af</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>5ja4p7ea5v5s2g7n5cc4p0rll</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void g(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>a6vt1e4qv2gioc04q0t7t6jtda</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.b: com.evernote.provider.b c(android.content.Context)</calledAt>
            <sender>com.evernote.provider.b</sender>
            <component></component>
            <action>"com.evernote.action.SDCARD_CHANGED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>9vrrihnnmei1jrnhhp2q3rdml4</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <sender>com.evernote.provider.q</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>nbd7goskt97japmmtkvririjv9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.RESET_PASSWORD_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>l4dpptlt0jcmb0902eebk4khn1</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>nequo77n65kreou35gkaqo6sag</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableEvernoteFragementActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableEvernoteFragementActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>kg8hlimvkcq4n55cftf5vncl70</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.no: void onClick(android.view.View)</calledAt>
            <sender>com.evernote.ui.no</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setIntent</consumerMethod>
            <id>45tta5ujpa06g99scqkbs176bq</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NotebookFragment: void a(com.evernote.ui.helper.bc,android.widget.TextView,boolean)</calledAt>
            <sender>com.evernote.ui.NotebookFragment</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.SAVE_NOTEBOOK"</action>
            <dataType></dataType>
            <scheme>hasValue</scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>j1jjnp39pvu4vmqc1fbu6c66n8</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.NoteListFragment: void m(int)</calledAt>
            <sender>com.evernote.ui.NoteListFragment</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>setResult</consumerMethod>
            <id>r0hd99nukumuhquqgtg7ggc1dt</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.TAG_UPLOADED"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>hm25qc6khvk7k5n0ub2n4kof5a</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.LockableActivity: void startActivity(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.pinlock.LockableActivity</sender>
            <component></component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>k0unh7vnhdso2435oek4po2t16</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String)</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.GET_CAPTCHA_RESULT"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>498el3u67uejmrnm9fcqcpe5rj</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.RegistrationFragment: void f(android.content.Intent)</calledAt>
            <sender>com.evernote.ui.RegistrationFragment</sender>
            <component>com.evernote.ui.LoginActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>feclmmn55fta3febp3lpog8n2d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <sender>com.evernote.ui.EvernotePreferenceActivity</sender>
            <component>com.evernote.client.EvernoteService</component>
            <action>"com.evernote.action.CLEAR_CACHE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>cip2pdsj653k2j34nr85ds738f</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.helper.dg: void c(android.content.Context)</calledAt>
            <sender>com.evernote.ui.helper.dg</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>oi7gtujinuk46p2aanv51b7c96</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.EvernoteService: void b()</calledAt>
            <sender>com.evernote.client.EvernoteService</sender>
            <component></component>
            <action>"com.evernote.action.LOG_IN_PREP_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>95p929olafvupnjiud41uoueh2</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <sender>com.evernote.client.SyncService</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>ilt3h1lnakk1sem0fn9rfk2b8d</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <sender>com.evernote.provider.EvernoteProvider</sender>
            <component></component>
            <action>"com.evernote.action.CONTENT_DONE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendOrderedBroadcast</consumerMethod>
            <id>pteh55m9998cklfe6a3i6vd0u6</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.rx: boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String)</calledAt>
            <sender>com.evernote.ui.rx</sender>
            <component>com.evernote.client.SyncService</component>
            <action>"com.evernote.action.FULL_SYNC"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startService</consumerMethod>
            <id>u2bi6gm1qunv3mdk9jcms9dgk9</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.pinlock.b: void b(android.content.Context,java.lang.String)</calledAt>
            <sender>com.evernote.ui.pinlock.b</sender>
            <component></component>
            <action>"com.evernote.action.ACTION_PINLOCK_STATE_CHANGE"</action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>false</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>sendBroadcast</consumerMethod>
            <id>kcibfkfvo2453o2fa998srt2j0</id>
            <random/>
        </Intent>
        <Intent>
            <calledAt>com.evernote.ui.maps.r: void a(android.app.Activity)</calledAt>
            <sender>com.evernote.ui.maps.r</sender>
            <component>com.evernote.ui.NoteListActivity</component>
            <action></action>
            <dataType></dataType>
            <scheme></scheme>
            <extra>true</extra>
            <sensitiveData>false</sensitiveData>
            <consumerMethod>startActivity</consumerMethod>
            <id>186o68ja1p49v44a1b0b2nhd2j</id>
            <random/>
        </Intent>
    </newIntents>
    <ContentProviders>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.u: void a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.RateAppActivity: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void c(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.util.Collection,java.lang.String,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void a(android.app.Activity,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.z)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.n: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$z2</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(android.content.Context,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.lang.StringBuilder e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List j()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.s: int a(com.evernote.ui.helper.bp,com.google.android.maps.MapView)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailPickerFragment: android.database.Cursor a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r1</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.o,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: java.lang.String c(android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r22</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void q()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: void init(android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.os.Bundle)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r27</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: boolean a(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.be: android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.WidgetProviderService: java.util.Set a(android.content.Context,int,android.widget.RemoteViews,int,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void e(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r16</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.x)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.maps.EvernoteMapActivity: void e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: java.lang.String a(android.content.ContentResolver,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int delete(android.net.Uri,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void h(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: com.evernote.ui.helper.be a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r37</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment$28: java.lang.String doInBackground(java.lang.Void[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean b(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: int a(android.app.Activity)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.jx: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,com.evernote.e.c.g,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void n()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,java.lang.String,com.evernote.e.c.k)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r12</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: com.evernote.ui.helper.bx a(android.content.Context,android.net.Uri,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.net.Uri,android.net.Uri)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void l()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: java.lang.String a(android.content.Context,java.lang.String,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.Evernote: boolean c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: android.net.Uri d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.SearchFragment: android.database.Cursor c(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean b(android.view.MenuItem)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: void h(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean j(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean r()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: boolean a(int,com.evernote.ui.helper.ah)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void onActivityResult(int,int,android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: void g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: java.lang.String b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void b(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.ex: void onClick(android.view.View)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(com.evernote.e.c.g,boolean,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,java.lang.String,com.evernote.client.m)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.util.Collection,com.evernote.client.m,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ba: boolean a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.List g(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.StringBuilder c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.AdvanceSearchSelectorFragment: void E()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>a</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EmailActivity: void f()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: com.evernote.e.c.i a(android.content.Context,android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean d(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void a(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r6</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.k: int a(android.content.Context,java.lang.String,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.Map c(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: android.database.Cursor a(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.lang.String a(java.lang.String,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: android.graphics.Bitmap a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.i,boolean,boolean,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.b: int d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean g()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,com.evernote.e.c.g,com.evernote.client.m,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void e(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void f(boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: java.util.List a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteListFragment: boolean a(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.an: boolean c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: boolean onPreferenceTreeClick(android.preference.PreferenceScreen,android.preference.Preference)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.au: java.util.ArrayList a(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,long)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.b: void &lt;init&gt;(android.content.Context,android.net.Uri,int,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,int,com.evernote.client.t,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: android.content.ContentValues a(com.evernote.client.Draft,byte[],long,long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.ui.OfflineNotebookSettingsFragment: void a(int,int,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(com.evernote.e.c.g,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r9</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: java.lang.String a(java.lang.String,android.net.Uri,int,byte[],java.lang.String,java.lang.String,android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.EvernotePreferenceActivity: void b()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dj b(android.app.Activity,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[])</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r3</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.au: void c(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.io.File)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.b: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>0</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.LinkedNotebookFragment$14: com.evernote.e.c.g doInBackground(android.net.Uri[])</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void f(android.database.Cursor)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean a(android.content.Context,java.lang.String,java.lang.String,int,com.evernote.client.t)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.util.an: void b(com.evernote.client.Draft,byte[],long,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r8</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.a.d: void a(android.content.Context,java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NewNoteActivity: void u()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,java.lang.String,int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.o)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.database.Cursor,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void a(android.database.Cursor,com.evernote.e.c.g,com.evernote.client.p)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void c(com.evernote.e.c.g)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: void a(com.evernote.client.Draft,java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void k()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean b(java.lang.String,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.util.x: boolean a(android.content.Context,java.lang.String,java.lang.String,boolean,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean p(int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: boolean aa()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.x: void b(android.content.Context,boolean,com.evernote.client.u)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.o: com.evernote.e.c.i b(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookFragment: android.app.Dialog V()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,com.evernote.e.c.i,boolean,com.evernote.e.c.g,byte[],int)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r13</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.an: boolean c(com.evernote.client.Draft,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void onHandleIntent(android.content.Intent)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r10</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r15</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void c(android.content.Context,java.lang.String,com.evernote.e.c.i,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean c(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r5</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: java.lang.String a(android.content.Context,java.lang.String,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: boolean a()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void b(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: java.util.List b(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.a.d: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.Draft: void a(java.lang.String,android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String c(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: void a(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: int e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.a.d: java.lang.String d(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.JSKeywordSearchInfo: java.util.List getResourceHightableImages()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.bq: long f(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NotebookShareSettingsActivity: java.lang.String d(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: boolean e(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.DYNDialogActivity: boolean a(android.content.Context,boolean)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: com.evernote.e.c.g b(android.content.Context,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void m()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.NoteViewFragment: void a(android.content.Context,java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.i)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.util.o: java.lang.String e(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: void g(java.lang.String,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.ai: android.database.Cursor a(java.lang.CharSequence)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r4</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.v: void a(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.EvernoteService: void a(java.lang.String,java.lang.String,java.lang.String,android.content.ContentResolver)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.client.v: void b(android.content.Context,java.lang.String,com.evernote.e.c.v)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <dbMethod>insert</dbMethod>
            <calledAt>com.evernote.provider.EvernoteProvider: android.net.Uri insert(android.net.Uri,android.content.ContentValues)</calledAt>
            <exitOrEntry>entry</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.ra: void run()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r43</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.client.SyncService: boolean e()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r2</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void h()</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>query</dbMethod>
            <calledAt>com.evernote.ui.helper.dg: com.evernote.ui.helper.dl d(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.client.SyncService: void b(com.evernote.e.c.ad,java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>ANY_URI</uris>
            <dbMethod>delete</dbMethod>
            <calledAt>com.evernote.ui.helper.cw: void a(java.lang.String)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
        <ContentProvider>
            <uris>$r7</uris>
            <dbMethod>update</dbMethod>
            <calledAt>com.evernote.provider.q: void b(android.content.Context)</calledAt>
            <exitOrEntry>exit</exitOrEntry>
        </ContentProvider>
    </ContentProviders>
    <usesPermissions>
        <permission>WRITE_EXTERNAL_STORAGE</permission>
        <permission>READ_LOGS</permission>
        <permission>BILLING</permission>
        <permission>INTERNET</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>READ_DATA</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>INSTALL_SHORTCUT</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>WRITE_DATA</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>WAKE_LOCK</permission>
        <permission>READ_CONTACTS</permission>
        <permission>VIBRATE</permission>
        <permission>ACCESS_WIFI_STATE</permission>
    </usesPermissions>
    <actuallyUsesPermissions>
        <permission>WAKE_LOCK</permission>
        <permission>RECORD_AUDIO</permission>
        <permission>ACCESS_NETWORK_STATE</permission>
        <permission>ACCESS_WIFI_STATE</permission>
        <permission>ACCESS_FINE_LOCATION</permission>
        <permission>ACCESS_COARSE_LOCATION</permission>
        <permission>VIBRATE</permission>
        <permission>READ_PHONE_STATE</permission>
        <permission>GET_ACCOUNTS</permission>
        <permission>INTERNET</permission>
    </actuallyUsesPermissions>
    <requiredPermissions/>
    <apkFile>../../../app_repo/appbundle/Evernote.apk</apkFile>
    <name>Evernote</name>
</application>
